use super::*;

#[test]
fn arrange_coins_test() {
    let test_cases = vec![
        (5, 2),
        (8, 3),
        (2146467959, 65519)
    ];
    for case in test_cases {
        assert_eq!(Solution::arrange_coins(case.0), case.1);
    }
}

#[test]
fn level_order_bottom_test() {
    let test_cases = vec![
        (
            vec![Some(3), Some(9), Some(20), None, None, Some(15), Some(7)],
            vec![
                vec![15, 7],
                vec![9, 20],
                vec![3],
            ]
        ),
        (
            vec![Some(-150),None,Some(-149),None,Some(-148),None,Some(-147),None,Some(-146),None,Some(-145),None,Some(-144),None,Some(-143),None,Some(-142),None,Some(-141),None,Some(-140),None,Some(-139),None,Some(-138),None,Some(-137),None,Some(-136),None,Some(-135),None,Some(-134),None,Some(-133),None,Some(-132),None,Some(-131),None,Some(-130),None,Some(-129),None,Some(-128),None,Some(-127),None,Some(-126),None,Some(-125),None,Some(-124),None,Some(-123),None,Some(-122),None,Some(-121),None,Some(-120),None,Some(-119),None,Some(-118),None,Some(-117),None,Some(-116),None,Some(-115),None,Some(-114),None,Some(-113),None,Some(-112),None,Some(-111),None,Some(-110),None,Some(-109),None,Some(-108),None,Some(-107),None,Some(-106),None,Some(-105),None,Some(-104),None,Some(-103),None,Some(-102),None,Some(-101),None,Some(-100),None,Some(-99),None,Some(-98),None,Some(-97),None,Some(-96),None,Some(-95),None,Some(-94),None,Some(-93),None,Some(-92),None,Some(-91),None,Some(-90),None,Some(-89),None,Some(-88),None,Some(-87),None,Some(-86),None,Some(-85),None,Some(-84),None,Some(-83),None,Some(-82),None,Some(-81),None,Some(-80),None,Some(-79),None,Some(-78),None,Some(-77),None,Some(-76),None,Some(-75),None,Some(-74),None,Some(-73),None,Some(-72),None,Some(-71),None,Some(-70),None,Some(-69),None,Some(-68),None,Some(-67),None,Some(-66),None,Some(-65),None,Some(-64),None,Some(-63),None,Some(-62),None,Some(-61),None,Some(-60),None,Some(-59),None,Some(-58),None,Some(-57),None,Some(-56),None,Some(-55),None,Some(-54),None,Some(-53),None,Some(-52),None,Some(-51),None,Some(-50),None,Some(-49),None,Some(-48),None,Some(-47),None,Some(-46),None,Some(-45),None,Some(-44),None,Some(-43),None,Some(-42),None,Some(-41),None,Some(-40),None,Some(-39),None,Some(-38),None,Some(-37),None,Some(-36),None,Some(-35),None,Some(-34),None,Some(-33),None,Some(-32),None,Some(-31),None,Some(-30),None,Some(-29),None,Some(-28),None,Some(-27),None,Some(-26),None,Some(-25),None,Some(-24),None,Some(-23),None,Some(-22),None,Some(-21),None,Some(-20),None,Some(-19),None,Some(-18),None,Some(-17),None,Some(-16),None,Some(-15),None,Some(-14),None,Some(-13),None,Some(-12),None,Some(-11),None,Some(-10),None,Some(-9),None,Some(-8),None,Some(-7),None,Some(-6),None,Some(-5),None,Some(-4),None,Some(-3),None,Some(-2),None,Some(-1),None,Some(0),None,Some(1),None,Some(2),None,Some(3),None,Some(4),None,Some(5),None,Some(6),None,Some(7),None,Some(8),None,Some(9),None,Some(10),None,Some(11),None,Some(12),None,Some(13),None,Some(14),None,Some(15),None,Some(16),None,Some(17),None,Some(18),None,Some(19),None,Some(20),None,Some(21),None,Some(22),None,Some(23),None,Some(24),None,Some(25),None,Some(26),None,Some(27),None,Some(28),None,Some(29),None,Some(30),None,Some(31),None,Some(32),None,Some(33),None,Some(34),None,Some(35),None,Some(36),None,Some(37),None,Some(38),None,Some(39),None,Some(40),None,Some(41),None,Some(42),None,Some(43),None,Some(44),None,Some(45),None,Some(46),None,Some(47),None,Some(48),None,Some(49),None,Some(50),None,Some(51),None,Some(52),None,Some(53),None,Some(54),None,Some(55),None,Some(56),None,Some(57),None,Some(58),None,Some(59),None,Some(60),None,Some(61),None,Some(62),None,Some(63),None,Some(64),None,Some(65),None,Some(66),None,Some(67),None,Some(68),None,Some(69),None,Some(70),None,Some(71),None,Some(72),None,Some(73),None,Some(74),None,Some(75),None,Some(76),None,Some(77),None,Some(78),None,Some(79),None,Some(80),None,Some(81),None,Some(82),None,Some(83),None,Some(84),None,Some(85),None,Some(86),None,Some(87),None,Some(88),None,Some(89),None,Some(90),None,Some(91),None,Some(92),None,Some(93),None,Some(94),None,Some(95),None,Some(96),None,Some(97),None,Some(98),None,Some(99),None,Some(100),None,Some(101),None,Some(102),None,Some(103),None,Some(104),None,Some(105),None,Some(106),None,Some(107),None,Some(108),None,Some(109),None,Some(110),None,Some(111),None,Some(112),None,Some(113),None,Some(114),None,Some(115),None,Some(116),None,Some(117),None,Some(118),None,Some(119),None,Some(120),None,Some(121),None,Some(122),None,Some(123),None,Some(124),None,Some(125),None,Some(126),None,Some(127),None,Some(128),None,Some(129),None,Some(130),None,Some(131),None,Some(132),None,Some(133),None,Some(134),None,Some(135),None,Some(136),None,Some(137),None,Some(138),None,Some(139),None,Some(140),None,Some(141),None,Some(142),None,Some(143),None,Some(144),None,Some(145),None,Some(146),None,Some(147),None,Some(148),None,Some(149),None,Some(150),None,Some(151),None,Some(152),None,Some(153),None,Some(154),None,Some(155),None,Some(156),None,Some(157),None,Some(158),None,Some(159),None,Some(160),None,Some(161),None,Some(162),None,Some(163),None,Some(164),None,Some(165),None,Some(166),None,Some(167),None,Some(168),None,Some(169),None,Some(170),None,Some(171),None,Some(172),None,Some(173),None,Some(174),None,Some(175),None,Some(176),None,Some(177),None,Some(178),None,Some(179),None,Some(180),None,Some(181),None,Some(182),None,Some(183),None,Some(184),None,Some(185),None,Some(186),None,Some(187),None,Some(188),None,Some(189),None,Some(190),None,Some(191),None,Some(192),None,Some(193),None,Some(194),None,Some(195),None,Some(196),None,Some(197),None,Some(198),None,Some(199),None,Some(200),None,Some(201),None,Some(202),None,Some(203),None,Some(204),None,Some(205),None,Some(206),None,Some(207),None,Some(208),None,Some(209),None,Some(210),None,Some(211),None,Some(212),None,Some(213),None,Some(214),None,Some(215),None,Some(216),None,Some(217),None,Some(218),None,Some(219),None,Some(220),None,Some(221),None,Some(222),None,Some(223),None,Some(224),None,Some(225),None,Some(226),None,Some(227),None,Some(228),None,Some(229),None,Some(230),None,Some(231),None,Some(232),None,Some(233),None,Some(234),None,Some(235),None,Some(236),None,Some(237),None,Some(238),None,Some(239),None,Some(240),None,Some(241),None,Some(242),None,Some(243),None,Some(244),None,Some(245),None,Some(246),None,Some(247),None,Some(248),None,Some(249),None,Some(250),None,Some(251),None,Some(252),None,Some(253),None,Some(254),None,Some(255),None,Some(256),None,Some(257),None,Some(258),None,Some(259),None,Some(260),None,Some(261),None,Some(262),None,Some(263),None,Some(264),None,Some(265),None,Some(266),None,Some(267),None,Some(268),None,Some(269),None,Some(270),None,Some(271),None,Some(272),None,Some(273),None,Some(274),None,Some(275),None,Some(276),None,Some(277),None,Some(278),None,Some(279),None,Some(280),None,Some(281),None,Some(282),None,Some(283),None,Some(284),None,Some(285),None,Some(286),None,Some(287),None,Some(288),None,Some(289),None,Some(290),None,Some(291),None,Some(292),None,Some(293),None,Some(294),None,Some(295),None,Some(296),None,Some(297),None,Some(298),None,Some(299),None,Some(300),None,Some(301),None,Some(302),None,Some(303),None,Some(304),None,Some(305),None,Some(306),None,Some(307),None,Some(308),None,Some(309),None,Some(310),None,Some(311),None,Some(312),None,Some(313),None,Some(314),None,Some(315),None,Some(316),None,Some(317),None,Some(318),None,Some(319),None,Some(320),None,Some(321),None,Some(322),None,Some(323),None,Some(324),None,Some(325),None,Some(326),None,Some(327),None,Some(328),None,Some(329),None,Some(330),None,Some(331),None,Some(332),None,Some(333),None,Some(334),None,Some(335),None,Some(336),None,Some(337),None,Some(338),None,Some(339),None,Some(340),None,Some(341),None,Some(342),None,Some(343),None,Some(344),None,Some(345),None,Some(346),None,Some(347),None,Some(348),None,Some(349),None,Some(350),None,Some(351),None,Some(352),None,Some(353),None,Some(354),None,Some(355),None,Some(356),None,Some(357),None,Some(358),None,Some(359),None,Some(360),None,Some(361),None,Some(362),None,Some(363),None,Some(364),None,Some(365),None,Some(366),None,Some(367),None,Some(368),None,Some(369),None,Some(370),None,Some(371),None,Some(372),None,Some(373),None,Some(374),None,Some(375),None,Some(376),None,Some(377),None,Some(378),None,Some(379),None,Some(380),None,Some(381),None,Some(382),None,Some(383),None,Some(384),None,Some(385),None,Some(386),None,Some(387),None,Some(388),None,Some(389),None,Some(390),None,Some(391),None,Some(392),None,Some(393),None,Some(394),None,Some(395),None,Some(396),None,Some(397),None,Some(398),None,Some(399),None,Some(400),None,Some(401),None,Some(402),None,Some(403),None,Some(404),None,Some(405),None,Some(406),None,Some(407),None,Some(408),None,Some(409),None,Some(410),None,Some(411),None,Some(412),None,Some(413),None,Some(414),None,Some(415),None,Some(416),None,Some(417),None,Some(418),None,Some(419),None,Some(420),None,Some(421),None,Some(422),None,Some(423),None,Some(424),None,Some(425),None,Some(426),None,Some(427),None,Some(428),None,Some(429),None,Some(430),None,Some(431),None,Some(432),None,Some(433),None,Some(434),None,Some(435),None,Some(436),None,Some(437),None,Some(438),None,Some(439),None,Some(440),None,Some(441),None,Some(442),None,Some(443),None,Some(444),None,Some(445),None,Some(446),None,Some(447),None,Some(448),None,Some(449),None,Some(450),None,Some(451),None,Some(452),None,Some(453),None,Some(454),None,Some(455),None,Some(456),None,Some(457),None,Some(458),None,Some(459),None,Some(460),None,Some(461),None,Some(462),None,Some(463),None,Some(464),None,Some(465),None,Some(466),None,Some(467),None,Some(468),None,Some(469),None,Some(470),None,Some(471),None,Some(472),None,Some(473),None,Some(474),None,Some(475),None,Some(476),None,Some(477),None,Some(478),None,Some(479),None,Some(480),None,Some(481),None,Some(482),None,Some(483),None,Some(484),None,Some(485),None,Some(486),None,Some(487),None,Some(488),None,Some(489),None,Some(490),None,Some(491),None,Some(492),None,Some(493),None,Some(494),None,Some(495),None,Some(496),None,Some(497),None,Some(498),None,Some(499),None,Some(500),None,Some(501),None,Some(502),None,Some(503),None,Some(504),None,Some(505),None,Some(506),None,Some(507),None,Some(508),None,Some(509),None,Some(510),None,Some(511),None,Some(512),None,Some(513),None,Some(514),None,Some(515),None,Some(516),None,Some(517),None,Some(518),None,Some(519),None,Some(520),None,Some(521),None,Some(522),None,Some(523),None,Some(524),None,Some(525),None,Some(526),None,Some(527),None,Some(528),None,Some(529),None,Some(530),None,Some(531),None,Some(532),None,Some(533),None,Some(534),None,Some(535),None,Some(536),None,Some(537),None,Some(538),None,Some(539),None,Some(540),None,Some(541),None,Some(542),None,Some(543),None,Some(544),None,Some(545),None,Some(546),None,Some(547),None,Some(548),None,Some(549),None,Some(550),None,Some(551),None,Some(552),None,Some(553),None,Some(554),None,Some(555),None,Some(556),None,Some(557),None,Some(558),None,Some(559),None,Some(560),None,Some(561),None,Some(562),None,Some(563),None,Some(564),None,Some(565),None,Some(566),None,Some(567),None,Some(568),None,Some(569),None,Some(570),None,Some(571),None,Some(572),None,Some(573),None,Some(574),None,Some(575),None,Some(576),None,Some(577),None,Some(578),None,Some(579),None,Some(580),None,Some(581),None,Some(582),None,Some(583),None,Some(584),None,Some(585),None,Some(586),None,Some(587),None,Some(588),None,Some(589),None,Some(590),None,Some(591),None,Some(592),None,Some(593),None,Some(594),None,Some(595),None,Some(596),None,Some(597),None,Some(598),None,Some(599),None,Some(600)],
            vec![
                vec![15, 7],
                vec![9, 20],
                vec![3],
            ]
        )
    ];
    for case in test_cases {
        assert_eq!(Solution::level_order_bottom(TreeNode::from_level_order(&case.0)), case.1);
    }
}

